#coding: utf-8

"""
Django settings for blogbootstrap project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

import os
from django.utils.translation import gettext_lazy as _

BASE_DIR = os.path.dirname(os.path.dirname(__file__))
BASEFILE = os.environ['BASEFILE'] #'c:/sites/blogbs/bin/filetocopy.zip'
BASETEXT = os.environ['BASETEXT'] #'c:/sites/blogbs/bin/basedict_w.dat'
BASEWORDS = os.environ['BASEWORDS'] #'c:/sites/blogbs/bin/basedict_l.dat'
MATWORDS = os.environ['MATWORDS'] #'c:/sites/blogbs/bin/mat_l.dat'
ANECS_DATA = 'c:/sites/blogbs/bin/anecs_data.txt' #os.environ['ANECS_DATA']
ANECS_DATA2 = 'c:/sites/blogbs/bin/anecs_data2.txt' #os.environ['ANECS_DATA2']
DEFAULT_PIC = 'pic.jpg'

TELEGRAM_BOT_TOKEN = os.environ['TELEGRAM_BOT_TOKEN'] #'276099709:AAGgyarUgQRNcitxmg4Ex0ksQlrp-z3sSlI'

LOGIN_REDIRECT_URL = '/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '1f5$aczt14((1u^$bz)$rp7(&!)4y_(nt9d1olzw1m7ayvpq1o'
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'carousel',
    'soundtracks',
    'tempurls',
    'speaker',
    'bredbot',
    'uprofile',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blogbootstrap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blogbootstrap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
'''
DATABASES = {
    'default': {
        'ENGINE': 'mysql.connector.django',
        'NAME': 'blogbs1',
        'USER': 'undead',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'PASSWORD':'volosatiy0',
        'OPTIONS': {
          'autocommit': True,
        },
    }
}
'''

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ru'
LANGUAGES = (
	('ru', _(u'Русский')), # Python 2
	('en', _('English')),
)
LOCALE_PATHS = (
	os.path.join(BASE_DIR, 'locale'),
)

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATICFILES_DIRS = ['staticfiles/']
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
DEBUGMEDIA = True

SITE_ID = 1

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
